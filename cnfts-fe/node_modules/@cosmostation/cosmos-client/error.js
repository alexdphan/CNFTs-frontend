"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.MobileConnectError = exports.SignError = exports.GetAccountError = exports.ExtensionInstallError = void 0;
var ExtensionInstallError = /** @class */ (function (_super) {
    __extends(ExtensionInstallError, _super);
    function ExtensionInstallError() {
        var _this = _super.call(this) || this;
        _this.name = 'ExtensionInstallError';
        Object.setPrototypeOf(_this, ExtensionInstallError.prototype);
        return _this;
    }
    return ExtensionInstallError;
}(Error));
exports.ExtensionInstallError = ExtensionInstallError;
var GetAccountError = /** @class */ (function (_super) {
    __extends(GetAccountError, _super);
    function GetAccountError() {
        var _this = _super.call(this) || this;
        _this.name = 'GetAccountError';
        Object.setPrototypeOf(_this, GetAccountError.prototype);
        return _this;
    }
    return GetAccountError;
}(Error));
exports.GetAccountError = GetAccountError;
var SignError = /** @class */ (function (_super) {
    __extends(SignError, _super);
    function SignError() {
        var _this = _super.call(this) || this;
        _this.name = 'SignError';
        Object.setPrototypeOf(_this, SignError.prototype);
        return _this;
    }
    return SignError;
}(Error));
exports.SignError = SignError;
var MobileConnectError = /** @class */ (function (_super) {
    __extends(MobileConnectError, _super);
    function MobileConnectError() {
        var _this = _super.call(this) || this;
        _this.name = 'MobileConnectError';
        Object.setPrototypeOf(_this, MobileConnectError.prototype);
        return _this;
    }
    return MobileConnectError;
}(Error));
exports.MobileConnectError = MobileConnectError;
