"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getModalV2 = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("@chakra-ui/react");
var _react2 = _interopRequireWildcard(require("react"));
var _components = require("./components");
var _theme = require("./theme");
var _utilsV = require("./utils-v2");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var getModalV2 = function getModalV2(version) {
  return function (_ref) {
    var isOpen = _ref.isOpen,
      setOpen = _ref.setOpen,
      walletRepo = _ref.walletRepo,
      theme = _ref.theme;
    var initialFocus = (0, _react2.useRef)();
    var _useState = (0, _react2.useState)('list'),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      display = _useState2[0],
      setDisplay = _useState2[1];
    var _useState3 = (0, _react2.useState)(),
      _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
      qrCodeWallet = _useState4[0],
      setQRCodeWallet = _useState4[1];
    var _useState5 = (0, _react2.useState)(),
      _useState6 = (0, _slicedToArray2["default"])(_useState5, 2),
      modalHead = _useState6[0],
      setModalHead = _useState6[1];
    var _useState7 = (0, _react2.useState)(),
      _useState8 = (0, _slicedToArray2["default"])(_useState7, 2),
      modalContent = _useState8[0],
      setModalContent = _useState8[1];
    var _useState9 = (0, _react2.useState)('light'),
      _useState10 = (0, _slicedToArray2["default"])(_useState9, 2),
      colorMode = _useState10[0],
      setColorMode = _useState10[1];
    var _useColorMode = (0, _react.useColorMode)(),
      _colorMode = _useColorMode.colorMode;
    var wallets = walletRepo === null || walletRepo === void 0 ? void 0 : walletRepo.wallets;
    var current = walletRepo === null || walletRepo === void 0 ? void 0 : walletRepo.current;
    var singleViewDeps = [current, current === null || current === void 0 ? void 0 : current.walletStatus, current === null || current === void 0 ? void 0 : current.qrUrl, qrCodeWallet === null || qrCodeWallet === void 0 ? void 0 : qrCodeWallet.qrUrl, display];
    var listViewDeps = [wallets];
    var _useMemo = (0, _react2.useMemo)(function () {
        return (0, _utilsV.getSingleWalletView)(version, current, qrCodeWallet, setOpen, setDisplay, setQRCodeWallet);
      }, singleViewDeps),
      _useMemo2 = (0, _slicedToArray2["default"])(_useMemo, 2),
      singleViewHead = _useMemo2[0],
      singleViewContent = _useMemo2[1];
    var _useMemo3 = (0, _react2.useMemo)(function () {
        return (0, _utilsV.getWalletListView)(version, current, wallets, setOpen, setDisplay, setQRCodeWallet, initialFocus);
      }, listViewDeps),
      _useMemo4 = (0, _slicedToArray2["default"])(_useMemo3, 2),
      listViewHead = _useMemo4[0],
      listViewContent = _useMemo4[1];
    (0, _react2.useEffect)(function () {
      if (display === 'list' || !current && !qrCodeWallet || current && current.walletStatus === 'Disconnected') {
        setModalHead(listViewHead);
        setModalContent(listViewContent);
      } else {
        setModalHead(singleViewHead);
        setModalContent(singleViewContent);
      }
    }, [].concat(singleViewDeps, listViewDeps, [display]));
    (0, _react2.useEffect)(function () {
      setColorMode(window.localStorage.getItem('chakra-ui-color-mode'));
    }, [_colorMode]);
    var modal = /*#__PURE__*/_react2["default"].createElement(_components.SimpleConnectModal, {
      modalIsOpen: isOpen,
      modalOnClose: function modalOnClose() {
        if (!current || current.walletStatus === 'Disconnected') {
          setDisplay('list');
        } else {
          setDisplay('single');
        }
        setQRCodeWallet(void 0);
        setOpen(false);
      },
      modalHead: modalHead,
      modalContent: modalContent,
      initialRef: initialFocus
    });
    if (colorMode) {
      return modal;
    }
    return /*#__PURE__*/_react2["default"].createElement(_react.ChakraProvider, {
      theme: theme || _theme.noCssResetTheme,
      resetCSS: true,
      colorModeManager: (0, _react.createLocalStorageManager)('chakra-ui-color-mode') // let modal get global color mode
    }, modal);
  };
};
exports.getModalV2 = getModalV2;