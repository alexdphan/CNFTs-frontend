"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ConnectWalletButton = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = require("@chakra-ui/react");
var _react2 = _interopRequireDefault(require("react"));
var _ri = require("react-icons/ri");
var _defaultComponent = require("./default-component");
var SIZES = {
  lg: {
    h: 12,
    fontSize: 'lg'
  },
  md: {
    h: 10,
    fontSize: 'md'
  },
  sm: {
    h: 8,
    fontSize: 'sm'
  }
};
var Variants = function Variants(colorMode) {
  return {
    primary: {
      bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'primary.500', 'primary.400'),
      color: 'white',
      _hover: {
        bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'primary.400', 'primary.500')
      },
      _active: {
        bg: 'primary.50',
        color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'primary.500', 'primary.400'),
        boxShadow: 'none'
      },
      _focus: {
        boxShadow: '0 0 0 2px #C47CCF'
      },
      _loading: {
        opacity: 0.8,
        bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'primary.500', 'primary.400'),
        color: 'white',
        cursor: 'progress',
        _hover: {
          bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'primary.500', 'primary.400'),
          color: 'white',
          boxShadow: 'none'
        },
        _active: {
          bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'primary.500', 'primary.400'),
          color: 'white',
          boxShadow: 'none'
        },
        _focus: {
          bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'primary.500', 'primary.400'),
          color: 'white',
          boxShadow: 'none'
        }
      },
      _disabled: {
        opacity: 0.8,
        bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.50', 'gray.700'),
        color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.400', 'gray.500'),
        cursor: 'not-allowed',
        _hover: {
          bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.50', 'gray.700'),
          color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.400', 'gray.500'),
          boxShadow: 'none'
        },
        _active: {
          bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.50', 'gray.700'),
          color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.400', 'gray.500'),
          boxShadow: 'none'
        },
        _focus: {
          bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.50', 'gray.700'),
          color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.400', 'gray.500'),
          boxShadow: 'none'
        }
      }
    },
    secondary: {
      bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.100', 'gray.600'),
      color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.500', 'gray.200'),
      _hover: {
        bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.200', 'gray.700')
      },
      _active: {
        bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.200', 'gray.700'),
        color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.700', 'gray.50')
      },
      _focus: {
        boxShadow: '0 0 0 2px #C47CCF'
      },
      _loading: {
        opacity: 0.8,
        bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.50', 'gray.700'),
        color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.400', 'gray.500'),
        cursor: 'progress',
        _hover: {
          bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.50', 'gray.700'),
          color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.400', 'gray.500'),
          boxShadow: 'none'
        },
        _active: {
          bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.50', 'gray.700'),
          color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.400', 'gray.500'),
          boxShadow: 'none'
        },
        _focus: {
          bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.50', 'gray.700'),
          color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.400', 'gray.500'),
          boxShadow: 'none'
        }
      },
      _disabled: {
        opacity: 0.8,
        bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.50', 'gray.700'),
        color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.400', 'gray.500'),
        cursor: 'not-allowed',
        _hover: {
          bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.50', 'gray.700'),
          color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.400', 'gray.500'),
          boxShadow: 'none'
        },
        _active: {
          bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.50', 'gray.700'),
          color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.400', 'gray.500'),
          boxShadow: 'none'
        },
        _focus: {
          bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.50', 'gray.700'),
          color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.400', 'gray.500'),
          boxShadow: 'none'
        }
      }
    },
    tertiary: {
      bg: 'transparent',
      boxShadow: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, '0 0 0 1px #CBD5E0', '0 0 0 1px #718096'),
      color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.500', 'gray.300'),
      _hover: {
        bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.200', 'gray.700')
      },
      _active: {
        bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.200', 'gray.700'),
        color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.700', 'gray.50')
      },
      _focus: {
        boxShadow: '0 0 0 2px #C47CCF',
        bg: 'transparent',
        color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.500', 'gray.300')
      },
      _loading: {
        opacity: 0.8,
        bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.50', 'gray.700'),
        color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.400', 'gray.500'),
        boxShadow: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, '0 0 0 1px #CBD5E0', '0 0 0 1px #718096'),
        cursor: 'progress',
        _hover: {
          bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.50', 'gray.700'),
          color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.400', 'gray.500')
        },
        _active: {
          bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.50', 'gray.700'),
          color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.400', 'gray.500')
        },
        _focus: {
          bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.50', 'gray.700'),
          color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.400', 'gray.500')
        }
      },
      _disabled: {
        boxShadow: 'none',
        opacity: 0.8,
        bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.50', 'gray.700'),
        color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.400', 'gray.500'),
        cursor: 'not-allowed',
        _hover: {
          bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.50', 'gray.700'),
          color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.400', 'gray.500')
        },
        _active: {
          bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.50', 'gray.700'),
          color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.400', 'gray.500')
        },
        _focus: {
          bg: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.50', 'gray.700'),
          color: (0, _defaultComponent.handleChangeColorModeValue)(colorMode, 'gray.400', 'gray.500')
        }
      }
    }
  };
};
var ConnectWalletButton = function ConnectWalletButton(_ref) {
  var _ref$size = _ref.size,
    size = _ref$size === void 0 ? 'md' : _ref$size,
    buttonText = _ref.buttonText,
    isLoading = _ref.isLoading,
    isDisabled = _ref.isDisabled,
    _ref$variant = _ref.variant,
    variant = _ref$variant === void 0 ? 'secondary' : _ref$variant,
    leftIcon = _ref.leftIcon,
    rightIcon = _ref.rightIcon,
    onClickConnectBtn = _ref.onClickConnectBtn;
  var _useColorMode = (0, _react.useColorMode)(),
    colorMode = _useColorMode.colorMode;
  return /*#__PURE__*/_react2["default"].createElement(_react.Button, (0, _extends2["default"])({
    px: 2.5,
    w: "full",
    h: SIZES[size].h,
    display: "flex",
    alignItems: "center",
    fontSize: SIZES[size].fontSize,
    isLoading: isLoading,
    isDisabled: isDisabled,
    onClick: onClickConnectBtn
  }, Variants(colorMode)[variant]), leftIcon ? /*#__PURE__*/_react2["default"].createElement(_react.Center, {
    mr: 1.5
  }, leftIcon) : /*#__PURE__*/_react2["default"].createElement(_react.Center, {
    mr: 1.5
  }, /*#__PURE__*/_react2["default"].createElement(_react.Icon, {
    as: _ri.RiWallet3Fill
  })), buttonText ? /*#__PURE__*/_react2["default"].createElement(_react.Text, null, buttonText) : /*#__PURE__*/_react2["default"].createElement(_react.Text, null, "Connect Wallet"), rightIcon && /*#__PURE__*/_react2["default"].createElement(_react.Center, {
    ml: 1.5
  }, rightIcon));
};
exports.ConnectWalletButton = ConnectWalletButton;