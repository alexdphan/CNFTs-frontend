"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChainWalletBase = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _cosmwasmStargate = require("@cosmjs/cosmwasm-stargate");
var _stargate = require("@cosmjs/stargate");
var _tx = require("cosmjs-types/cosmos/tx/v1beta1/tx");
var _types = require("../types");
var _utils = require("../utils");
var _wallet = require("./wallet");
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var ChainWalletBase = /*#__PURE__*/function (_WalletBase) {
  (0, _inherits2["default"])(ChainWalletBase, _WalletBase);
  var _super = _createSuper(ChainWalletBase);
  function ChainWalletBase(walletInfo, chainRecord) {
    var _chainRecord$preferre, _chainRecord$preferre2;
    var _this;
    (0, _classCallCheck2["default"])(this, ChainWalletBase);
    _this = _super.call(this, walletInfo);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "_chainRecord", void 0);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "rpcEndpoints", void 0);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "restEndpoints", void 0);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "_rpcEndpoint", void 0);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "_restEndpoint", void 0);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getRpcEndpoint", /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
      var _iterator, _step, endpoint;
      return _regenerator["default"].wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.t0 = _this._rpcEndpoint;
              if (!_context.t0) {
                _context.next = 5;
                break;
              }
              _context.next = 4;
              return (0, _utils.isValidEndpoint)(_this._rpcEndpoint);
            case 4:
              _context.t0 = _context.sent;
            case 5:
              if (!_context.t0) {
                _context.next = 7;
                break;
              }
              return _context.abrupt("return", _this._rpcEndpoint);
            case 7:
              _iterator = _createForOfIteratorHelper(_this.rpcEndpoints || []);
              _context.prev = 8;
              _iterator.s();
            case 10:
              if ((_step = _iterator.n()).done) {
                _context.next = 20;
                break;
              }
              endpoint = _step.value;
              _context.next = 14;
              return (0, _utils.isValidEndpoint)(endpoint);
            case 14:
              if (!_context.sent) {
                _context.next = 18;
                break;
              }
              _this._rpcEndpoint = endpoint;
              console.info('Using RPC endpoint ' + endpoint);
              return _context.abrupt("return", endpoint);
            case 18:
              _context.next = 10;
              break;
            case 20:
              _context.next = 25;
              break;
            case 22:
              _context.prev = 22;
              _context.t1 = _context["catch"](8);
              _iterator.e(_context.t1);
            case 25:
              _context.prev = 25;
              _iterator.f();
              return _context.finish(25);
            case 28:
              throw new Error("No valid RPC endpoint for chain ".concat(_this.chainName, " in ").concat(_this.walletName, "!"));
            case 29:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[8, 22, 25, 28]]);
    })));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getRestEndpoint", /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2() {
      var _iterator2, _step2, endpoint;
      return _regenerator["default"].wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _context2.t0 = _this._restEndpoint;
              if (!_context2.t0) {
                _context2.next = 5;
                break;
              }
              _context2.next = 4;
              return (0, _utils.isValidEndpoint)(_this._restEndpoint);
            case 4:
              _context2.t0 = _context2.sent;
            case 5:
              if (!_context2.t0) {
                _context2.next = 7;
                break;
              }
              return _context2.abrupt("return", _this._restEndpoint);
            case 7:
              _iterator2 = _createForOfIteratorHelper(_this.restEndpoints || []);
              _context2.prev = 8;
              _iterator2.s();
            case 10:
              if ((_step2 = _iterator2.n()).done) {
                _context2.next = 20;
                break;
              }
              endpoint = _step2.value;
              _context2.next = 14;
              return (0, _utils.isValidEndpoint)(endpoint);
            case 14:
              if (!_context2.sent) {
                _context2.next = 18;
                break;
              }
              _this._restEndpoint = endpoint;
              console.info('Using REST endpoint ' + endpoint);
              return _context2.abrupt("return", endpoint);
            case 18:
              _context2.next = 10;
              break;
            case 20:
              _context2.next = 25;
              break;
            case 22:
              _context2.prev = 22;
              _context2.t1 = _context2["catch"](8);
              _iterator2.e(_context2.t1);
            case 25:
              _context2.prev = 25;
              _iterator2.f();
              return _context2.finish(25);
            case 28:
              throw new Error("No valid Rest endpoint for chain ".concat(_this.chainName, " in ").concat(_this.walletName, "!"));
            case 29:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2, null, [[8, 22, 25, 28]]);
    })));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getStargateClient", /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3() {
      var rpcEndpoint;
      return _regenerator["default"].wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return _this.getRpcEndpoint();
            case 2:
              rpcEndpoint = _context3.sent;
              return _context3.abrupt("return", _stargate.StargateClient.connect(rpcEndpoint, _this.stargateOptions));
            case 4:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    })));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getCosmWasmClient", /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee4() {
      var rpcEndpoint;
      return _regenerator["default"].wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              _context4.next = 2;
              return _this.getRpcEndpoint();
            case 2:
              rpcEndpoint = _context4.sent;
              return _context4.abrupt("return", _cosmwasmStargate.CosmWasmClient.connect(rpcEndpoint));
            case 4:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4);
    })));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getSigningStargateClient", /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee5() {
      var rpcEndpoint;
      return _regenerator["default"].wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              _context5.next = 2;
              return _this.getRpcEndpoint();
            case 2:
              rpcEndpoint = _context5.sent;
              if (!_this.offlineSigner) {
                _context5.next = 7;
                break;
              }
              return _context5.abrupt("return", _stargate.SigningStargateClient.connectWithSigner(rpcEndpoint, _this.offlineSigner, _this.signingStargateOptions));
            case 7:
              throw new Error('Wallet not connected!');
            case 8:
            case "end":
              return _context5.stop();
          }
        }
      }, _callee5);
    })));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getSigningCosmWasmClient", /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee6() {
      var rpcEndpoint;
      return _regenerator["default"].wrap(function _callee6$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              _context6.next = 2;
              return _this.getRpcEndpoint();
            case 2:
              rpcEndpoint = _context6.sent;
              if (!_this.offlineSigner) {
                _context6.next = 7;
                break;
              }
              return _context6.abrupt("return", _cosmwasmStargate.SigningCosmWasmClient.connectWithSigner(rpcEndpoint, _this.offlineSigner, _this.signingCosmwasmOptions));
            case 7:
              throw new Error('Wallet not connected!');
            case 8:
            case "end":
              return _context6.stop();
          }
        }
      }, _callee6);
    })));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getSigningClient", /*#__PURE__*/function () {
      var _ref7 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee7(type) {
        return _regenerator["default"].wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.t0 = type;
                _context7.next = _context7.t0 === 'stargate' ? 3 : _context7.t0 === 'cosmwasm' ? 6 : 9;
                break;
              case 3:
                _context7.next = 5;
                return _this.getSigningStargateClient();
              case 5:
                return _context7.abrupt("return", _context7.sent);
              case 6:
                _context7.next = 8;
                return _this.getSigningCosmWasmClient();
              case 8:
                return _context7.abrupt("return", _context7.sent);
              case 9:
                return _context7.abrupt("return", _this.getSigningStargateClient());
              case 10:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7);
      }));
      return function (_x) {
        return _ref7.apply(this, arguments);
      };
    }());
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "estimateFee", /*#__PURE__*/function () {
      var _ref8 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee8(messages, type, memo, multiplier) {
        var _this$signingStargate, _this$signingCosmwasm, _this$signingStargate2;
        var gasPrice, client, gasEstimation;
        return _regenerator["default"].wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                if (_this.address) {
                  _context8.next = 2;
                  break;
                }
                throw new Error('Address is required to estimate fee. Try connect to fetch address.');
              case 2:
                _context8.t0 = type;
                _context8.next = _context8.t0 === 'stargate' ? 5 : _context8.t0 === 'cosmwasm' ? 7 : 9;
                break;
              case 5:
                gasPrice = (_this$signingStargate = _this.signingStargateOptions) === null || _this$signingStargate === void 0 ? void 0 : _this$signingStargate.gasPrice;
                return _context8.abrupt("break", 11);
              case 7:
                gasPrice = (_this$signingCosmwasm = _this.signingCosmwasmOptions) === null || _this$signingCosmwasm === void 0 ? void 0 : _this$signingCosmwasm.gasPrice;
                return _context8.abrupt("break", 11);
              case 9:
                gasPrice = (_this$signingStargate2 = _this.signingStargateOptions) === null || _this$signingStargate2 === void 0 ? void 0 : _this$signingStargate2.gasPrice;
                return _context8.abrupt("break", 11);
              case 11:
                if (gasPrice) {
                  _context8.next = 13;
                  break;
                }
                throw new Error('Gas price must be set in the client options when auto gas is used.');
              case 13:
                _context8.next = 15;
                return _this.getSigningClient(type);
              case 15:
                client = _context8.sent;
                _context8.next = 18;
                return client.simulate(_this.address, messages, memo);
              case 18:
                gasEstimation = _context8.sent;
                return _context8.abrupt("return", (0, _stargate.calculateFee)(Math.round(gasEstimation * (multiplier || 1.3)), gasPrice));
              case 20:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8);
      }));
      return function (_x2, _x3, _x4, _x5) {
        return _ref8.apply(this, arguments);
      };
    }());
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "sign", /*#__PURE__*/function () {
      var _ref9 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee9(messages, fee, memo, type) {
        var client, usedFee;
        return _regenerator["default"].wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                if (_this.address) {
                  _context9.next = 2;
                  break;
                }
                throw new Error('Address is required to estimate fee. Try connect to fetch address.');
              case 2:
                _context9.next = 4;
                return _this.getSigningClient(type);
              case 4:
                client = _context9.sent;
                if (!(typeof fee === 'undefined' || typeof fee === 'number')) {
                  _context9.next = 11;
                  break;
                }
                _context9.next = 8;
                return _this.estimateFee(messages, type, memo, fee);
              case 8:
                usedFee = _context9.sent;
                _context9.next = 12;
                break;
              case 11:
                usedFee = fee;
              case 12:
                _context9.next = 14;
                return client.sign(_this.address, messages, usedFee, memo || '');
              case 14:
                return _context9.abrupt("return", _context9.sent);
              case 15:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9);
      }));
      return function (_x6, _x7, _x8, _x9) {
        return _ref9.apply(this, arguments);
      };
    }());
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "broadcast", /*#__PURE__*/function () {
      var _ref10 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee10(signedMessages, type) {
        var _this$signingStargate3, _this$signingStargate4, _this$signingCosmwasm2, _this$signingCosmwasm3, _this$signingStargate5, _this$signingStargate6;
        var client, txBytes, timeoutMs, pollIntervalMs;
        return _regenerator["default"].wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _context10.next = 2;
                return _this.getSigningClient(type);
              case 2:
                client = _context10.sent;
                txBytes = _tx.TxRaw.encode(signedMessages).finish();
                _context10.t0 = type;
                _context10.next = _context10.t0 === 'stargate' ? 7 : _context10.t0 === 'cosmwasm' ? 10 : 13;
                break;
              case 7:
                timeoutMs = (_this$signingStargate3 = _this.signingStargateOptions) === null || _this$signingStargate3 === void 0 ? void 0 : _this$signingStargate3.broadcastTimeoutMs;
                pollIntervalMs = (_this$signingStargate4 = _this.signingStargateOptions) === null || _this$signingStargate4 === void 0 ? void 0 : _this$signingStargate4.broadcastPollIntervalMs;
                return _context10.abrupt("break", 16);
              case 10:
                timeoutMs = (_this$signingCosmwasm2 = _this.signingCosmwasmOptions) === null || _this$signingCosmwasm2 === void 0 ? void 0 : _this$signingCosmwasm2.broadcastTimeoutMs;
                pollIntervalMs = (_this$signingCosmwasm3 = _this.signingCosmwasmOptions) === null || _this$signingCosmwasm3 === void 0 ? void 0 : _this$signingCosmwasm3.broadcastPollIntervalMs;
                return _context10.abrupt("break", 16);
              case 13:
                timeoutMs = (_this$signingStargate5 = _this.signingStargateOptions) === null || _this$signingStargate5 === void 0 ? void 0 : _this$signingStargate5.broadcastTimeoutMs;
                pollIntervalMs = (_this$signingStargate6 = _this.signingStargateOptions) === null || _this$signingStargate6 === void 0 ? void 0 : _this$signingStargate6.broadcastPollIntervalMs;
                return _context10.abrupt("break", 16);
              case 16:
                return _context10.abrupt("return", client.broadcastTx(txBytes, timeoutMs, pollIntervalMs));
              case 17:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10);
      }));
      return function (_x10, _x11) {
        return _ref10.apply(this, arguments);
      };
    }());
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "signAndBroadcast", /*#__PURE__*/function () {
      var _ref11 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee11(messages, fee, memo, type) {
        var signedMessages;
        return _regenerator["default"].wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _context11.next = 2;
                return _this.sign(messages, fee, memo, type);
              case 2:
                signedMessages = _context11.sent;
                return _context11.abrupt("return", _this.broadcast(signedMessages, type));
              case 4:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11);
      }));
      return function (_x12, _x13, _x14, _x15) {
        return _ref11.apply(this, arguments);
      };
    }());
    _this._chainRecord = chainRecord;
    _this.rpcEndpoints = (_chainRecord$preferre = chainRecord.preferredEndpoints) === null || _chainRecord$preferre === void 0 ? void 0 : _chainRecord$preferre.rpc;
    _this.restEndpoints = (_chainRecord$preferre2 = chainRecord.preferredEndpoints) === null || _chainRecord$preferre2 === void 0 ? void 0 : _chainRecord$preferre2.rest;
    return _this;
  }
  (0, _createClass2["default"])(ChainWalletBase, [{
    key: "chainRecord",
    get: function get() {
      return this._chainRecord;
    }
  }, {
    key: "chainName",
    get: function get() {
      return this.chainRecord.name;
    }
  }, {
    key: "chainLogoUrl",
    get: function get() {
      var _this$chainRecord$ass, _this$chainRecord$ass2, _this$chainRecord$ass3, _this$chainRecord$ass4, _this$chainRecord$ass5, _this$chainRecord$ass6;
      return (
        // until chain_registry fix this
        // this.chainInfo.chain.logo_URIs?.svg ||
        // this.chainInfo.chain.logo_URIs?.png ||
        // this.chainInfo.chain.logo_URIs?.jpeg ||
        ((_this$chainRecord$ass = this.chainRecord.assetList) === null || _this$chainRecord$ass === void 0 ? void 0 : (_this$chainRecord$ass2 = _this$chainRecord$ass.assets[0]) === null || _this$chainRecord$ass2 === void 0 ? void 0 : (_this$chainRecord$ass3 = _this$chainRecord$ass2.logo_URIs) === null || _this$chainRecord$ass3 === void 0 ? void 0 : _this$chainRecord$ass3.svg) || ((_this$chainRecord$ass4 = this.chainRecord.assetList) === null || _this$chainRecord$ass4 === void 0 ? void 0 : (_this$chainRecord$ass5 = _this$chainRecord$ass4.assets[0]) === null || _this$chainRecord$ass5 === void 0 ? void 0 : (_this$chainRecord$ass6 = _this$chainRecord$ass5.logo_URIs) === null || _this$chainRecord$ass6 === void 0 ? void 0 : _this$chainRecord$ass6.png) || undefined
      );
    }
  }, {
    key: "stargateOptions",
    get: function get() {
      var _this$chainRecord$cli;
      return (_this$chainRecord$cli = this.chainRecord.clientOptions) === null || _this$chainRecord$cli === void 0 ? void 0 : _this$chainRecord$cli.stargate;
    }
  }, {
    key: "signingStargateOptions",
    get: function get() {
      var _this$chainRecord$cli2, _this$chainRecord$cli3;
      return ((_this$chainRecord$cli2 = this.chainRecord.clientOptions) === null || _this$chainRecord$cli2 === void 0 ? void 0 : _this$chainRecord$cli2.signingStargate) || ((_this$chainRecord$cli3 = this.chainRecord.clientOptions) === null || _this$chainRecord$cli3 === void 0 ? void 0 : _this$chainRecord$cli3.stargate);
    }
  }, {
    key: "signingCosmwasmOptions",
    get: function get() {
      var _this$chainRecord$cli4;
      return (_this$chainRecord$cli4 = this.chainRecord.clientOptions) === null || _this$chainRecord$cli4 === void 0 ? void 0 : _this$chainRecord$cli4.signingCosmwasm;
    }
  }, {
    key: "chain",
    get: function get() {
      return this.chainRecord.chain;
    }
  }, {
    key: "assets",
    get: function get() {
      var _this$chainRecord$ass7;
      return (_this$chainRecord$ass7 = this.chainRecord.assetList) === null || _this$chainRecord$ass7 === void 0 ? void 0 : _this$chainRecord$ass7.assets;
    }
  }, {
    key: "assetList",
    get: function get() {
      return this.chainRecord.assetList;
    }
  }, {
    key: "chainId",
    get: function get() {
      var _this$chain;
      return (_this$chain = this.chain) === null || _this$chain === void 0 ? void 0 : _this$chain.chain_id;
    }
  }, {
    key: "cosmwasmEnabled",
    get: function get() {
      var _this$chain2, _this$chain2$codebase;
      return (_this$chain2 = this.chain) === null || _this$chain2 === void 0 ? void 0 : (_this$chain2$codebase = _this$chain2.codebase) === null || _this$chain2$codebase === void 0 ? void 0 : _this$chain2$codebase.cosmwasm_enabled;
    }
  }, {
    key: "username",
    get: function get() {
      var _this$data;
      return (_this$data = this.data) === null || _this$data === void 0 ? void 0 : _this$data.username;
    }
  }, {
    key: "address",
    get: function get() {
      var _this$data2;
      return (_this$data2 = this.data) === null || _this$data2 === void 0 ? void 0 : _this$data2.address;
    }
  }, {
    key: "offlineSigner",
    get: function get() {
      var _this$data3;
      return (_this$data3 = this.data) === null || _this$data3 === void 0 ? void 0 : _this$data3.offlineSigner;
    }
  }, {
    key: "fetchClient",
    value: function fetchClient() {
      console.warn('This method should keep the same with the main walllet. If you see this message, please check your "onSetChainsDone" method in main wallet.');
      return void 0;
    }
  }, {
    key: "update",
    value: function () {
      var _update = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee12(sessionOptions, callbacks) {
        var _ref12,
          _ref12$beforeConnect,
          _this2 = this,
          _ref13,
          _ref13$afterConnect;
        var account, _window;
        return _regenerator["default"].wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                _context12.next = 2;
                return (_ref12 = callbacks || this.callbacks) === null || _ref12 === void 0 ? void 0 : (_ref12$beforeConnect = _ref12.beforeConnect) === null || _ref12$beforeConnect === void 0 ? void 0 : _ref12$beforeConnect.call(_ref12);
              case 2:
                if (this.client) {
                  _context12.next = 5;
                  break;
                }
                this.setClientNotExist();
                return _context12.abrupt("return");
              case 5:
                this.setState(_types.State.Pending);
                _context12.prev = 6;
                if (!this.client.addChain) {
                  _context12.next = 26;
                  break;
                }
                _context12.prev = 8;
                _context12.next = 11;
                return this.client.getAccount(this.chainId);
              case 11:
                account = _context12.sent;
                _context12.next = 24;
                break;
              case 14:
                _context12.prev = 14;
                _context12.t0 = _context12["catch"](8);
                if (!this.rejectMatched(_context12.t0)) {
                  _context12.next = 19;
                  break;
                }
                this.setRejected();
                return _context12.abrupt("return");
              case 19:
                _context12.next = 21;
                return this.client.addChain(this.chainRecord);
              case 21:
                _context12.next = 23;
                return this.client.getAccount(this.chainId);
              case 23:
                account = _context12.sent;
              case 24:
                _context12.next = 29;
                break;
              case 26:
                _context12.next = 28;
                return this.client.getAccount(this.chainId);
              case 28:
                account = _context12.sent;
              case 29:
                _context12.t1 = this;
                _context12.t2 = account.address;
                _context12.t3 = account.name;
                if (!this.chainId) {
                  _context12.next = 38;
                  break;
                }
                _context12.next = 35;
                return this.client.getOfflineSigner(this.chainId);
              case 35:
                _context12.t4 = _context12.sent;
                _context12.next = 39;
                break;
              case 38:
                _context12.t4 = void 0;
              case 39:
                _context12.t5 = _context12.t4;
                _context12.t6 = {
                  address: _context12.t2,
                  username: _context12.t3,
                  offlineSigner: _context12.t5
                };
                _context12.t1.setData.call(_context12.t1, _context12.t6);
                this.setState(_types.State.Done);
                if (sessionOptions !== null && sessionOptions !== void 0 && sessionOptions.duration) {
                  setTimeout(function () {
                    _this2.disconnect(callbacks);
                  }, sessionOptions === null || sessionOptions === void 0 ? void 0 : sessionOptions.duration);
                }
                _context12.next = 49;
                break;
              case 46:
                _context12.prev = 46;
                _context12.t7 = _context12["catch"](6);
                if (this.rejectMatched(_context12.t7)) {
                  this.setRejected();
                } else {
                  this.setError(_context12.t7);
                }
              case 49:
                if (!this.isWalletRejected) {
                  (_window = window) === null || _window === void 0 ? void 0 : _window.localStorage.setItem('chain-provider', this.walletName);
                }
                _context12.next = 52;
                return (_ref13 = callbacks || this.callbacks) === null || _ref13 === void 0 ? void 0 : (_ref13$afterConnect = _ref13.afterConnect) === null || _ref13$afterConnect === void 0 ? void 0 : _ref13$afterConnect.call(_ref13);
              case 52:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12, this, [[6, 46], [8, 14]]);
      }));
      function update(_x16, _x17) {
        return _update.apply(this, arguments);
      }
      return update;
    }()
  }]);
  return ChainWalletBase;
}(_wallet.WalletBase);
exports.ChainWalletBase = ChainWalletBase;