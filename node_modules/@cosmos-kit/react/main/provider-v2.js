"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.walletContextV2 = exports.ChainProvider = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _core = require("@cosmos-kit/core");
var _react = _interopRequireWildcard(require("react"));
var _ = require(".");
var _modal = require("./modal");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/* eslint-disable @typescript-eslint/no-explicit-any */
/* eslint-disable @typescript-eslint/no-unused-vars */

var walletContextV2 = /*#__PURE__*/(0, _react.createContext)(null);
exports.walletContextV2 = walletContextV2;
var ChainProvider = function ChainProvider(_ref) {
  var chains = _ref.chains,
    assetLists = _ref.assetLists,
    wallets = _ref.wallets,
    walletModal = _ref.walletModal,
    modalTheme = _ref.modalTheme,
    signerOptions = _ref.signerOptions,
    endpointOptions = _ref.endpointOptions,
    sessionOptions = _ref.sessionOptions,
    children = _ref.children;
  var walletManager = (0, _react.useMemo)(function () {
    return new _core.WalletManagerV2(chains, assetLists, wallets, signerOptions, endpointOptions, sessionOptions);
  }, []);
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
    isViewOpen = _useState2[0],
    setViewOpen = _useState2[1];
  var _useState3 = (0, _react.useState)(),
    _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
    viewWalletRepo = _useState4[0],
    setViewWalletRepo = _useState4[1];
  walletManager.walletRepos.forEach(function (wr) {
    var _useState5 = (0, _react.useState)(),
      _useState6 = (0, _slicedToArray2["default"])(_useState5, 2),
      setData = _useState6[1];
    var _useState7 = (0, _react.useState)(wr.state),
      _useState8 = (0, _slicedToArray2["default"])(_useState7, 2),
      state = _useState8[0],
      setState = _useState8[1];
    var _useState9 = (0, _react.useState)(),
      _useState10 = (0, _slicedToArray2["default"])(_useState9, 2),
      msg = _useState10[0],
      setMsg = _useState10[1];
    wr.setActions({
      viewOpen: setViewOpen,
      viewWalletRepo: setViewWalletRepo
    });
    wr.wallets.forEach(function (w) {
      w.setActions({
        data: setData,
        state: setState,
        message: setMsg
      });
    });
  });
  var Modal = (0, _react.useMemo)(function () {
    if (!walletModal) {
      return _.DefaultModalV2;
    } else if (typeof walletModal === 'string') {
      return (0, _modal.getModalV2)(walletModal);
    } else {
      return walletModal;
    }
  }, [walletModal]);
  (0, _react.useEffect)(function () {
    walletManager.onMounted();
    return function () {
      walletManager.onUnmounted();
    };
  }, []);
  return /*#__PURE__*/_react["default"].createElement(walletContextV2.Provider, {
    value: {
      walletManager: walletManager
    }
  }, children, /*#__PURE__*/_react["default"].createElement(Modal, {
    isOpen: isViewOpen,
    setOpen: setViewOpen,
    walletRepo: viewWalletRepo,
    theme: modalTheme
  }));
};
exports.ChainProvider = ChainProvider;