"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.walletContext = exports.WalletProvider = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _core = require("@cosmos-kit/core");
var _react = _interopRequireWildcard(require("react"));
var _ = require(".");
var _modal = require("./modal");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/* eslint-disable @typescript-eslint/no-unused-vars */

var walletContext = /*#__PURE__*/(0, _react.createContext)(null);
exports.walletContext = walletContext;
var WalletProvider = function WalletProvider(_ref) {
  var chains = _ref.chains,
    assetLists = _ref.assetLists,
    wallets = _ref.wallets,
    walletModal = _ref.walletModal,
    signerOptions = _ref.signerOptions,
    viewOptions = _ref.viewOptions,
    endpointOptions = _ref.endpointOptions,
    storageOptions = _ref.storageOptions,
    sessionOptions = _ref.sessionOptions,
    children = _ref.children;
  var walletManager = (0, _react.useMemo)(function () {
    return new _core.WalletManager(chains, assetLists, wallets, signerOptions, viewOptions, endpointOptions, storageOptions, sessionOptions);
  }, []);
  var _useState = (0, _react.useState)(),
    _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
    walletData = _useState2[0],
    setWalletData = _useState2[1];
  var _useState3 = (0, _react.useState)(walletManager.state),
    _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
    walletState = _useState4[0],
    setWalletState = _useState4[1];
  var _useState5 = (0, _react.useState)(),
    _useState6 = (0, _slicedToArray2["default"])(_useState5, 2),
    walletMsg = _useState6[0],
    setWalletMsg = _useState6[1];
  var _useState7 = (0, _react.useState)(walletManager.currentWalletName),
    _useState8 = (0, _slicedToArray2["default"])(_useState7, 2),
    walletName = _useState8[0],
    setWalletName = _useState8[1];
  var _useState9 = (0, _react.useState)(false),
    _useState10 = (0, _slicedToArray2["default"])(_useState9, 2),
    isViewOpen = _useState10[0],
    setViewOpen = _useState10[1];
  var _useState11 = (0, _react.useState)(),
    _useState12 = (0, _slicedToArray2["default"])(_useState11, 2),
    chainName = _useState12[0],
    setChainName = _useState12[1];
  var _useState13 = (0, _react.useState)(),
    _useState14 = (0, _slicedToArray2["default"])(_useState13, 2),
    qrUrl = _useState14[0],
    setQRUrl = _useState14[1];
  walletManager.setActions({
    data: setWalletData,
    state: setWalletState,
    message: setWalletMsg,
    walletName: setWalletName,
    viewOpen: setViewOpen,
    chainName: setChainName,
    qrUrl: setQRUrl
  });
  var Modal = (0, _react.useMemo)(function () {
    if (!walletModal) {
      return _.DefaultModal;
    } else if (typeof walletModal === 'string') {
      return (0, _modal.getModal)(walletModal);
    } else {
      return walletModal;
    }
  }, [walletModal]);
  (0, _react.useEffect)(function () {
    walletManager.onMounted();
    return function () {
      walletManager.onUnmounted();
    };
  }, []);
  return /*#__PURE__*/_react["default"].createElement(walletContext.Provider, {
    value: {
      walletManager: walletManager
    }
  }, children, /*#__PURE__*/_react["default"].createElement(Modal, {
    isOpen: isViewOpen,
    setOpen: setViewOpen
  }));
};
exports.WalletProvider = WalletProvider;